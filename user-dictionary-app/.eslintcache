[{"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\index.js":"1","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\store.js":"2","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\actionsFiles\\apiActions.js":"3","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\reducers\\usersReducer.js":"4","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\index.js":"5","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Navbar.js":"6","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Home.js":"7","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\Routing.js":"8","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Usersbook.js":"9","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Loader\\Loader.jsx":"10","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\AddUser.js":"11","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\actionsFiles\\userAction.js":"12"},{"size":288,"mtime":1611256426183,"results":"13","hashOfConfig":"14"},{"size":293,"mtime":1611242057537,"results":"15","hashOfConfig":"14"},{"size":1364,"mtime":1611337757030,"results":"16","hashOfConfig":"14"},{"size":296,"mtime":1611262480759,"results":"17","hashOfConfig":"14"},{"size":192,"mtime":1611320590082,"results":"18","hashOfConfig":"14"},{"size":570,"mtime":1611337135198,"results":"19","hashOfConfig":"14"},{"size":1050,"mtime":1611336838223,"results":"20","hashOfConfig":"14"},{"size":554,"mtime":1611320619099,"results":"21","hashOfConfig":"14"},{"size":6179,"mtime":1611337163132,"results":"22","hashOfConfig":"14"},{"size":319,"mtime":1611262118692,"results":"23","hashOfConfig":"14"},{"size":2803,"mtime":1611337667548,"results":"24","hashOfConfig":"14"},{"size":4673,"mtime":1611337535715,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tn7ofj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\index.js",[],["55","56"],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\store.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\actionsFiles\\apiActions.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\reducers\\usersReducer.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\index.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Navbar.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Home.js",["57"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as action from \"../actionsFiles/apiActions\";\r\nimport * as UserAction from \"../actionsFiles/userAction\";\r\nimport \"./css/Home.css\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    check: false,\r\n    bookId: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.isLoaded) {\r\n      this.props.dispatch(action.setLoaded(false));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.check) {\r\n      return <Redirect to={`/book/${this.state.bookId}`} />;\r\n    }\r\n    return (\r\n      <div className=\"d-flex flex-wrap justify-content-evenly home\">\r\n        <UserAction.makeBooks onClickHandler={this.onClickHandler} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onClickHandler = (page) => {\r\n    this.props.dispatch(action.getUsers(page));\r\n    this.setState({\r\n      check: true,\r\n      bookId: page,\r\n    });\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\Routing.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Usersbook.js",["58","59","60"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../actionsFiles/apiActions\";\r\nimport * as UserAction from \"../actionsFiles/userAction\";\r\nimport Loader from \"./Loader/Loader\";\r\nimport \"./css/Userbook.css\";\r\n\r\nclass Usersbook extends Component {\r\n  state = {\r\n    inputText: null,\r\n    users: [],\r\n    text: null,\r\n    editUser: false,\r\n    editData: {},\r\n    filterValues: {\r\n      DOB: null,\r\n      Country: null,\r\n    },\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.props.isLoaded ? (\r\n          <Loader />\r\n        ) : (\r\n          <div className=\"user-book\">\r\n            <div className=\"d-flex search\">\r\n              <div className=\"search-box d-flex justify-content-between\">\r\n                <input\r\n                  className=\"search-input bg-light\"\r\n                  type=\"search\"\r\n                  placeholder=\"Enter user name\"\r\n                  aria-label=\"Search\"\r\n                  onChange={(e) => this.setState({ inputText: e.target.value })}\r\n                />\r\n                <button\r\n                  onClick={this.onClickHandler}\r\n                  className=\"search-btn bg-dark\"\r\n                >\r\n                  FIND USER\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"user-list bg-light\">\r\n              <UserAction.makeDropDown\r\n                users={this.state.users}\r\n                onChangeFilterHandler={this.onChangeFilterHandler}\r\n                onClickFilterHandler={this.onClickFilterHandler}\r\n              />\r\n              {!this.state.editUser ? (\r\n                this.state.users.length !== 0 ? (\r\n                  <div className=\"user-book-cards d-flex flex-wrap justify-content-evenly overflow-auto\">\r\n                    {this.state.users.map((user) => (\r\n                      <UserAction.makeUserCards\r\n                        user={user}\r\n                        onUserAction={this.onUserAction}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <h3 className=\"text-center mt-5\">{this.state.text}</h3>\r\n                )\r\n              ) : (\r\n                <div className=\"user-book-cards d-flex flex-wrap justify-content-evenly overflow-auto\">\r\n                  <UserAction.makeEditCard\r\n                    user={this.state.editUser}\r\n                    onChangeEditHandler={this.onChangeEditHandler}\r\n                    onUserAction={this.onUserAction}\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { match, isLoaded } = this.props;\r\n    if (!isLoaded) {\r\n      this.props.dispatch(action.getUsers(match.params.id));\r\n    }\r\n  }\r\n\r\n  onChangeEditHandler = (e) => {\r\n    this.setState({\r\n      editData: { ...this.state.editData, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n\r\n  onUserAction = (e, user) => {\r\n    if (e.target.name === \"del\") {\r\n      action.deleteUser(user.id);\r\n      const updatedUsers = this.state.users.filter(\r\n        (value) => value.id !== user.id\r\n      );\r\n      this.props.dispatch({\r\n        type: \"USERS\",\r\n        payload: updatedUsers,\r\n      });\r\n      this.setState({\r\n        ...this.state,\r\n        users: updatedUsers,\r\n      });\r\n    }\r\n    if (e.target.name === \"edit\") {\r\n      this.setState({\r\n        ...this.state,\r\n        editUser: user,\r\n      });\r\n    }\r\n    if (e.target.name === \"update\") {\r\n      action.updateUser(this.state.editData, user.id);\r\n      let userData = this.state.editData;\r\n      userData = { ...userData, id: user.id };\r\n      let index = this.state.users.findIndex((value) => value.id === user.id);\r\n      let updatedUsers = this.state.users;\r\n      updatedUsers[index] = userData;\r\n      this.props.dispatch({\r\n        type: \"USERS\",\r\n        payload: updatedUsers,\r\n      });\r\n      this.setState({ ...this.state, editUser: false, users: [userData] });\r\n    }\r\n  };\r\n\r\n  onClickHandler = () => {\r\n    if (this.state.inputText !== null && this.state.inputText.length >= 3) {\r\n      const name =\r\n        this.state.inputText.charAt(0).toUpperCase() +\r\n        this.state.inputText.slice(1);\r\n      let data = this.props.users.filter((user) =>\r\n        user[\"Full Name\"].includes(name)\r\n      );\r\n      this.setState({\r\n        ...this.state,\r\n        users: data,\r\n      });\r\n      if (data.length === 0) {\r\n        this.setState({\r\n          ...this.state,\r\n          text: \"Not Found\",\r\n          users: [],\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        text: \"Not Found\",\r\n        users: [],\r\n      });\r\n    }\r\n  };\r\n  onClickFilterHandler = () => {\r\n    const filter = this.state.filterValues;\r\n    let filterUser = [];\r\n    if (filter.DOB !== null) {\r\n      filterUser = this.state.users.filter(\r\n        (user) => user[\"Date of birth\"].substring(0, 10) === filter.DOB\r\n      );\r\n    }\r\n    if (filter.Country !== null) {\r\n      filterUser = this.state.users.filter(\r\n        (user) => user.Country === filter.Country\r\n      );\r\n    }\r\n\r\n    console.log(filterUser);\r\n\r\n    if (filterUser.length !== 0) {\r\n      this.setState({\r\n        ...this.state,\r\n        users: filterUser,\r\n        filterValues: {\r\n          DOB: null,\r\n          Country: null,\r\n        },\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ...this.state,\r\n        text: \"Not Found\",\r\n        users: [],\r\n        filterValues: {\r\n          DOB: null,\r\n          Country: null,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeFilterHandler = (e, country) => {\r\n    if (e.target.name === \"Country\") {\r\n      this.setState({\r\n        filterValues: {\r\n          ...this.state.filterValues,\r\n          [e.target.name]: country,\r\n        },\r\n      });\r\n    }\r\n    if (e.target.name === \"DOB\") {\r\n      this.setState({\r\n        filterValues: {\r\n          ...this.state.filterValues,\r\n          [e.target.name]: e.target.value,\r\n        },\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Usersbook);\r\n","D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\Loader\\Loader.jsx",[],["61","62"],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\components\\AddUser.js",[],"D:\\Git Projects\\React-User-Dictionary-Application\\user-dictionary-app\\src\\actionsFiles\\userAction.js",["63"],"import userImg from \"../components/img/user.jpg\";\r\nimport bookImg from \"../components/img/book.jpg\";\r\n\r\nexport const makeEditCard = ({ user, onChangeEditHandler, onUserAction }) => {\r\n  return (\r\n    <div key={user.id} className=\"user\">\r\n      <div className=\"d-flex\">\r\n        <img src={userImg} alt=\"user\" />\r\n        <div className=\"user-details\">\r\n          <h6>\r\n            <b>Name: </b>\r\n            <input name=\"Full Name\" onChange={onChangeEditHandler} />\r\n          </h6>\r\n          <h6>\r\n            <b>Email: </b>\r\n            <input name=\"Email\" onChange={onChangeEditHandler} />\r\n          </h6>\r\n          <h6>\r\n            <b>Date of birth: </b>\r\n            <input\r\n              type=\"date\"\r\n              name=\"Date of birth\"\r\n              onChange={onChangeEditHandler}\r\n            />\r\n          </h6>\r\n          <h6>\r\n            <b>Country: </b>\r\n            <input name=\"Country\" onChange={onChangeEditHandler} />\r\n          </h6>\r\n        </div>\r\n      </div>\r\n      <div className=\"user-action d-flex justify-content-between\">\r\n        <div></div>\r\n        <div>\r\n          <button\r\n            className=\"edit\"\r\n            name=\"update\"\r\n            onClick={(e) => onUserAction(e, user)}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const makeUserCards = ({ user, onUserAction }) => {\r\n  let Months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n  const DOB = user[\"Date of birth\"];\r\n  const Year = DOB.substring(0, 4);\r\n  const Month = DOB.substring(5, 7);\r\n  const Day = DOB.substring(8, 10);\r\n\r\n  return (\r\n    <div key={user.id} className=\"user\">\r\n      <div className=\"d-flex\">\r\n        <img src={userImg} alt=\"user\" />\r\n        <div className=\"user-details\">\r\n          <h6>\r\n            <b>Name:</b> {user[\"Full Name\"]}\r\n          </h6>\r\n          <h6>\r\n            <b>Email:</b> {user.Email}\r\n          </h6>\r\n          <h6>\r\n            <b>Date of birth:</b> {Day} {Months[Month - 1]} {Year}\r\n          </h6>\r\n          <h6>\r\n            <b>Country:</b> {user.Country}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n      <div className=\"user-action d-flex justify-content-between\">\r\n        <div></div>\r\n        <div>\r\n          <button\r\n            className=\"edit\"\r\n            name=\"edit\"\r\n            onClick={(e) => onUserAction(e, user)}\r\n          >\r\n            Edit\r\n          </button>\r\n          <button\r\n            className=\"del\"\r\n            name=\"del\"\r\n            onClick={(e) => onUserAction(e, user)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const countryFinder = (users, onChangeFilterHandler) => {\r\n  const Country = users.map((user) => user.Country);\r\n  const unique = [...new Set(Country)];\r\n  return unique.map((country, index) => {\r\n    return (\r\n      <li key={index}>\r\n        <a\r\n          onClick={(e) => onChangeFilterHandler(e, country)}\r\n          className=\"dropdown-item\"\r\n          href=\"#\"\r\n          name=\"Country\"\r\n        >\r\n          {country}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nexport const makeDropDown = ({\r\n  users,\r\n  onChangeFilterHandler,\r\n  onClickFilterHandler,\r\n}) => {\r\n  return (\r\n    <div className=\"d-flex user-list-head\">\r\n      <div className=\"dropdown\">\r\n        <button\r\n          className=\"filter dropdown-toggle\"\r\n          type=\"button\"\r\n          id=\"dropdownMenu2\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          Country\r\n        </button>\r\n        <ul\r\n          className=\"dropdown-menu overflow-auto\"\r\n          aria-labelledby=\"dropdownMenu2\"\r\n        >\r\n          {countryFinder(users, onChangeFilterHandler)}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"dateFilter\">\r\n        <input\r\n          type=\"date\"\r\n          className=\"filter\"\r\n          name=\"DOB\"\r\n          onChange={onChangeFilterHandler}\r\n        />\r\n      </div>\r\n      <button onClick={onClickFilterHandler} className=\"filter-button\">\r\n        FILTER\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const makeBooks = ({ onClickHandler }) => {\r\n  const pages = [1, 2, 3, 4, 5, 6, 7, 8];\r\n  return pages.map((page) => {\r\n    return (\r\n      <div key={page} className=\"book\">\r\n        <div className=\"bookImg\">\r\n          <img src={bookImg} alt={page} />\r\n        </div>\r\n        <button\r\n          onClick={() => onClickHandler(page)}\r\n          className=\"bookBtn bg-primary\"\r\n        >\r\n          Users Book {page}\r\n        </button>\r\n      </div>\r\n    );\r\n  });\r\n};\r\n",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":26,"column":9,"nodeType":"70","endLine":26,"endColumn":70},{"ruleId":"68","severity":1,"message":"71","line":46,"column":15,"nodeType":"70","endLine":50,"endColumn":17},{"ruleId":"68","severity":1,"message":"72","line":55,"column":23,"nodeType":"70","endLine":58,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":66,"column":19,"nodeType":"70","endLine":70,"endColumn":21},{"ruleId":"64","replacedBy":"74"},{"ruleId":"66","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":116,"column":9,"nodeType":"70","endLine":121,"endColumn":10},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react/jsx-pascal-case","Imported JSX component makeBooks must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component makeDropDown must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component makeUserCards must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component makeEditCard must be in PascalCase or SCREAMING_SNAKE_CASE",["78"],["79"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]